#!/usr/bin/env python

srcdir = ".."

import sys, os
sys.path.insert(0, srcdir + "/buildtools/wafsamba")

from waflib import Options, Logs, Errors
import wafsamba
import build.charset
from wafsamba import samba_utils
from samba_utils import TO_LIST
from waflib.Tools import bison, flex
from waflib import Configure, Logs, Options, Utils, Context, Errors
from waflib.Configure import conf
default_prefix = Options.default_prefix = '/usr/local/samba'

@conf
def ADD_NAMED_CPPFLAGS(conf, flags, testflags=False, prereq_flags=[]):
    '''add some CFLAGS to the command line
       optionally set testflags to ensure all the flags work
    '''
    prereq_flags = TO_LIST(prereq_flags)
    if testflags:
        ok_flags=[]
        for f in flags.split():
            if CHECK_CPPFLAGS(conf, [f] + prereq_flags):
                ok_flags.append(f)
        flags = ok_flags
    
    if not 'CXXFLAGS' in conf.env:
        conf.env['CXXFLAGS'] = []
    conf.env['CXXFLAGS'].extend(TO_LIST(flags))

@conf
def CHECK_CPPFLAGS(conf, cflags, fragment='int main(void) { return 0; }\n'):
    '''check if the given cflags are accepted by the compiler
    '''
    check_cflags = TO_LIST(cflags)
    if 'WERROR_CPPFLAGS' in conf.env:
        check_cflags.extend(conf.env['WERROR_CFLAGS'])
    return conf.check(fragment=fragment,
                      execute=0,
                      mandatory=False,
                      type='nolink',
                      cflags=check_cflags,
                      msg="Checking compiler accepts %s" % cflags)
def configure(conf):
    conf.ADD_NAMED_CPPFLAGS('-DBOOST_LOG_DYN_LINK=1')
    conf.check_boost(lib='system log filesystem regex ')
    conf.ADD_NAMED_CPPFLAGS('-std=c++1z -Wno-comment', testflags=True)
    conf.ADD_NAMED_CPPFLAGS('-lpe -L/home/ascohen/dev/sambarpc/waf_conv/samba2/samba/trustwave/3rdparty/libpe -L/usr/lib/ -lstdc++fs ', testflags=True)
    print(conf.env['CXXFLAGS'])
