variables:
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_COMMIT_REF_SLUG
  GIT_SUBMODULE_STRATEGY: recursive

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - deps/

stages:
  - build_deps
  - build
  - unittests
  - coverage
  - build_rpms
  - on_rpm_tests
#  - test_install
#  #  - pages_deploy
#  - functional_tests
#  - smoke_test
  - deploy
  - service_update

before_script:
  - export REPORT_FNAME=results.$(date +%d-%m-%Y-%H_%M_%S)
  - if [[ $(cat build/version.txt) =~ ([0-9]+\.[0-9]+\.[0-9]+)\.([0-9]+)_([A-Z]+) ]] ; then export VERSION=${BASH_REMATCH[1]};export SNAPSHOT=${BASH_REMATCH[2]};export RELEASE=${BASH_REMATCH[3]}; fi
  - if [ "$RELEASE" = "SNAPSHOT" ]; then export REPO=snapshots ;export POM_SNAPSHOT='-SNAPSHOT'; else POM_SNAPSHOT= ;export REPO=releases; fi
  - export NEXUS_URL_PREFIX=https://${NEXUS_HOSTNAME}/content/repositories/${REPO}
  - export MAX_PRIOR_ITERATION=0;export PRIOR_RPM_ITERATIONS=$(curl "${NEXUS_URL_PREFIX}/com/trustwave/cdcm/maven-metadata.xml" | sed -nE "s/<version>${VERSION}.([[:digit:]]+)${POM_SNAPSHOT}<\/version>/\1/p")
  - for PRIOR_ITERATION in ${PRIOR_RPM_ITERATIONS}; do ((PRIOR_ITERATION > MAX_PRIOR_ITERATION)) && MAX_PRIOR_ITERATION=${PRIOR_ITERATION}; done
  - export ITERATION=$((++MAX_PRIOR_ITERATION))
  - export ARTIFACT_VERSION=${VERSION}.${ITERATION}${POM_SNAPSHOT}
  - export CMAKE_FLAGS='-DBUILD_DEV=OFF'
  - if [ -z $CI_COMMIT_TAG ]; then export CMAKE_FLAGS='-DBUILD_DEV=ON' ; fi;
  - env

after_script:
  - echo "After script section"

build_deps:
  stage: build_deps
  script:
    - scl enable devtoolset-8 "bash ci_scripts/build_deps.bash"
  rules:
    - if: '$BumpTag == null || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      changes:
        - build/Makefile
        - build/version.txt
        - tars/*
        - ci_scripts/build_deps.bash
        - .gitlab-ci.yml
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - deps/
    policy: pull-push
  tags:
    - cdcm

build:
  stage: build
  variables:
    DEPS_DIR: $CI_PROJECT_DIR/deps
  script:
    - scl enable devtoolset-8 "bash ci_scripts/build.bash"
  rules:
    - if: '$BumpTag == null || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      changes:
        - build/version.txt
        - src/**/*
        - tars/**/*
        - ci_scripts/build.bash
        - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
  artifacts:
    paths:
      - build_cdcm/
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - deps/
    policy: pull
  tags:
    - cdcm
  dependencies:
    - build_deps

unittests:
  stage: unittests
  allow_failure: true
  script:
    - scl enable devtoolset-8 'bash ci_scripts/unittests.bash'
  rules:
    - if: ' $RunFast==null && $BumpTag == null'
      changes:
        - build/version.txt
        - src/**/*
        - ci_scripts/unittests.bash
        - .gitlab-ci.yml
  artifacts:
    when: always
    paths:
      - build_cdcm/src/cdcm_testing/*.xml
      - build_cdcm/src/cdcm_testing/*.html
      - build_cdcm/src/cdcm_testing/log/cdcm_client.log
    reports:
      junit: build_cdcm/src/tests/*.xml
  tags:
    - cdcm
  dependencies:
    - build

html_coverage:
  stage: coverage
  script:
    - cd build_cdcm
    - scl enable devtoolset-8 "make html_coverage"
  artifacts:
    name: pages
    when: always
    paths:
      - build_cdcm/src/html_coverage
    expire_in: 10 days
  rules:
    - if: '$RunFast==null &&  $CI_COMMIT_BRANCH=="master" && $BumpTag == null && $CI_COMMIT_TAG!=null'
      changes:
        - src/**/*
        - .gitlab-ci.yml
    - if: '$RunFast==null &&  $CI_COMMIT_BRANCH=="develop" && $BumpTag == null && $CI_COMMIT_TAG!=null'
      changes:
        - src/**/*
        - .gitlab-ci.yml
  tags:
    - cdcm
  dependencies:
    - build

build_rpms:
  stage: build_rpms
  script:
    - scl enable devtoolset-8 "bash ci_scripts/build_rpm.bash"
  rules:
    - if: '$BumpTag == null || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      changes:
        - cdcm_settings.json
        - src/**/*
        - build/cdcm.spec
        - build/version.txt
        - build/cdcm.service
        - build/50-cdcm.preset
        - ci_scripts/build_rpm.bash
        - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'

  artifacts:
    paths:
      - build/RPMS/x86_64/
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - deps/
    policy: pull
  tags:
    - cdcm
  dependencies:
    - build

test_install:
  stage: on_rpm_tests
  tags:
    - cdcm_install
  script:
    - cd build
    - sudo yum install -y RPMS/x86_64/*.rpm
    - sudo systemctl status cdcm
    - sudo yum -y erase cdcm
  rules:
    - changes:
        - build/version.txt
        - cdcm_settings.json
        - src/**/*
        - build/cdcm.spec
        - build/cdcm.service
        - .gitlab-ci.yml
    - exists:
        - build/RPMS/x86_64/*.rpm
  dependencies:
    - build_rpms
  allow_failure: true

push_tag:
  stage: deploy
  script:
    - cd build
    - git remote set-url origin https://git_push_tag:${secret}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
    - git config --global push.default simple
    - bump2version $BumpTag --verbose --config-file ./bumpversion.cfg
    - git status
    - git push origin --tags
  rules:
    - if: ' $BumpTag != null'
  tags:
    - cdcm

deploy:
  stage: deploy
  script:
    - scl enable devtoolset-8 "bash ci_scripts/deploy.bash"
  rules:
    - changes:
        - ci_scripts/deploy.bash
        - .gitlab-ci.yml
    - exists:
        - build/RPMS/x86_64/*.rpm
    - when: on_success
  tags:
    - cdcm
  dependencies:
    - build_rpms

service_update:
  stage: service_update
  script:
    - cd build
    - if [ "$RELEASE" = "RELEASE" ] ; then curl -L "https://${NEXUS_HOSTNAME}/service/local/artifact/maven/redirect?r=releases&g=com.trustwave&a=cdcm&v=LATEST&p=rpm" -o cdcm.rpm ; if [ $(rpm -qa | grep cdcm) = $(rpm -qp cdcm.rpm) ]; then export INST_ACTION='reinstall'; else export INST_ACTION='install' ; fi ;sudo yum $INST_ACTION -y cdcm.rpm ;sed -i 's/127.0.0.1:7613/0.0.0.0:7613/gm' /etc/cdcm/cdcm_settings.json; systemctl restart cdcm; fi
  rules:
    - if: '$RunFast == null && $BumpTag == null && $CI_COMMIT_BRANCH == "master"'
  tags:
    - cdcm_service
  dependencies:
    - deploy

functional_tests:
  stage: on_rpm_tests
  allow_failure: true
  script:
    - bash ci_scripts/functional_tests.bash
  rules:
    - changes:
        - ci_scripts/functional_tests.bash
        - .gitlab-ci.yml
    - exists:
        - build/RPMS/x86_64/*.rpm
  artifacts:
    when: always
    paths:
      - cdcm_testing/functional_tests/*.log
      - cdcm_testing/functional_tests/log/*.log
  tags:
    - cdcm_tests
  dependencies:
    - build_rpms

smoke_test:
  stage: on_rpm_tests
  allow_failure: true
  script:
    - bash ci_scripts/smoke_test.bash
  rules:
    - changes:
        - ci_scripts/smoke_test.bash
        - .gitlab-ci.yml
    - exists:
        - build/RPMS/x86_64/*.rpm
  artifacts:
    when: always
    paths:
      - ./*.log
  tags:
    - cdcm_smoke
  dependencies:
    - build_rpms
