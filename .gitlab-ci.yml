variables:
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_COMMIT_TAG

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - deps/

stages:
  - build_deps
  - build
  - test
  - coverage
  - build_rpms
  - test_install
  #  - pages_deploy
  - deploy

before_script:
  - export REPORT_FNAME=results.$(date +%d-%m-%Y-%H_%M_%S).xml
  - echo $CI_PROJECT_DIR
  - export CMAKE_FLAGS='-DBUILD_DEV=OFF'
  - if [ -z $CI_COMMIT_TAG ]; then export CMAKE_FLAGS='-DBUILD_DEV=ON' ; fi;
  - env

after_script:
  - echo "After script section"

build_deps:
  stage: build_deps
  script:
    - cd build
    - scl enable devtoolset-8 'make deps'
  rules:
    - if: '$BumpTag == null || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      changes:
        - build/Makefile
        - build/version.txt
        - tars/*
        - .gitlab-ci.yml
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - deps/
    policy: pull-push
  tags:
    - cdcm

build:
  stage: build
  variables:
    DEPS_DIR: $CI_PROJECT_DIR/deps
  script:
    - scl enable devtoolset-8 bash
    - mkdir -p build_cdcm
    - cd build_cdcm
    - scl enable devtoolset-8 "cmake3 $CMAKE_FLAGS .."
    - scl enable devtoolset-8 "make -j4"
    - rm -fr /opt/output/libs/*
    - rm -fr /opt/output/bin/*
    - scl enable devtoolset-8 "make install"
  rules:
    - if: '$BumpTag == null || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      changes:
        - build/version.txt
        - src/**/*
        - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
  artifacts:
    paths:
      - build_cdcm/
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - deps/
    policy: pull
  tags:
    - cdcm
  dependencies:
    - build_deps

test:
  stage: test
  allow_failure: true
  script:
    - cd build_cdcm/
    - scl enable devtoolset-8 "make install"
    - cd src/tests/
    - pkill -9 cdcm
    - LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/output/${CI_COMMIT_BRANCH}/libs nohup cdcm_broker
    - ./tests_run  --log_sink=$REPORT_FNAME  --log_format=JUNIT  --log_level=all
    - pkill -9 cdcm
    - cd ../..
    - make uninstall
  rules:
    - if: ' $RunFast==null && $BumpTag == null'
      changes:
        - build/version.txt
        - src/**/*
        - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
  artifacts:
    when: always
    paths:
      - build_cdcm/src/tests/*.xml
    reports:
      junit: build_cdcm/src/tests/*.xml
  tags:
    - cdcm

html_coverage:
  stage: coverage
  script:
    - cd build_cdcm
    - make html_coverage
  artifacts:
    name: pages
    when: always
    paths:
      - build_cdcm/src/html_coverage
    expire_in: 10 days
  rules:
    - if: '$RunFast==null && $CI_COMMIT_BRANCH=="master" && $BumpTag == null && $CI_COMMIT_TAG!=null'
      changes:
        - src/**/*
        - .gitlab-ci.yml
  tags:
    - cdcm
  dependencies:
    - build

#
#pages:
#  stage: pages_deploy
#  dependencies:
#    - html_coverage
#  script:
#    - mkdir -p public
#    - rm -rf public/*
#    - cp -r build_cdcm/src/html_coverage/* public/
#  artifacts:
#    name: pages
#    paths:
#      - public/
#    expire_in: 15 days
#  only:
#    refs:
#      - branches
#  tags:
#    - cdcm

build_rpms:
  stage: build_rpms
  script:
    - cd build
    - if [[ $(cat version.txt) =~ ([0-9]+\.[0-9]+\.[0-9]+)\.([0-9]+)_([A-Z]+) ]] ; then VERSION=${BASH_REMATCH[1]};SNAPSHOT=${BASH_REMATCH[2]};RELEASE=${BASH_REMATCH[3]}; fi
    - if [ "$CI_COMMIT_BRANCH" = "master" ]; then  export BRANCH=''; else export BRANCH=_${CI_COMMIT_BRANCH//\//_}  ;fi
    - if [ "$RELEASE" = "SNAPSHOT" ];then export VERSION=${VERSION}${BRANCH}; export RELEASE_DEF="SNAPSHOT_$SNAPSHOT" ;else export RELEASE_DEF="$SNAPSHOT";fi
    - rpmbuild --define pkg_version $VERSION --define release $RELEASE_DEF  -bb cdcm.spec
  rules:
    - if: '$BumpTag == null || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      changes:
        - cdcm_settings.json
        - src/**/*
        - build/cdcm.spec
        - build/version.txt
        - build/cdcm.service
        - .gitlab-ci.yml
        - build/nexus_deploy.py
  artifacts:
    paths:
      - build/RPMS/x86_64/
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - deps/
    policy: pull
  tags:
    - cdcm

test_install:
  stage: test_install
  tags:
    - cdcm_install
  script:
    - cd build
    - sudo yum install -y RPMS/x86_64/*.rpm
    - sudo systemctl status tw-cdcm
    - sudo yum -y erase tw-cdcm
    - sudo systemctl status tw-cdcm
  rules:
    - if: '$RunFast==null && $BumpTag == null && $CI_COMMIT_BRANCH == "master"'
      changes:
        - build/version.txt
        - cdcm_settings.json
        - src/**/*
        - build/cdcm.spec
        - build/cdcm.service
        - .gitlab-ci.yml
    - if: '$RunFast==null && $BumpTag == null && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      changes:
        - cdcm_settings.json
        - src/**/*
        - build/cdcm.spec
        - build/cdcm.service
        - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - exists:
        - build/RPMS/x86_64/*.rpm
  dependencies:
    - build_rpms
  allow_failure: true

push_tag:
  stage: deploy
  script:
    - cd build
    - git remote set-url origin https://git_push_tag:${secret}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
    - git config --global push.default simple
    - bump2version $BumpTag --verbose --config-file ./bumpversion.cfg
    - git status
    - git push origin --tags
  rules:
    - if: ' $BumpTag != null'
  tags:
    - cdcm

deploy:
  stage: deploy
  script:
    - cd build
    - if [[ $(cat version.txt) =~ ([0-9]+\.[0-9]+\.[0-9]+)\.([0-9]+)_([A-Z]+) ]] ; then VERSION=${BASH_REMATCH[1]};SNAPSHOT=${BASH_REMATCH[2]};RELEASE=${BASH_REMATCH[3]}; fi
    - if [ "$CI_COMMIT_BRANCH" = "master" ]; then  export BRANCH=''; else export BRANCH=${CI_COMMIT_BRANCH//\//_}_ ;fi
    - export REPO=releases
    - if [ "$RELEASE" = "SNAPSHOT" ];then export VERSION=$BRANCH$VERSION.$SNAPSHOT-SNAPSHOT ; export REPO=snapshots ; else export VERSION=$VERSION.$SNAPSHOT ;fi
    - echo deploy:deploy-file -s /etc/maven/settings.xml  -DgroupId=com.trustwave -DartifactId=cdcm -Dversion=$VERSION -DgeneratePom=true -DrepositoryId=nexus -Durl=https://${NEXUS_HOSTNAME}/content/repositories/$REPO -Dpackaging=rpm -Dfile=$(ls -d RPMS/x86_64/*)
    - mvn deploy:deploy-file -s /etc/maven/settings.xml  -DgroupId=com.trustwave -DartifactId=cdcm -Dversion=$VERSION -DgeneratePom=true -DrepositoryId=nexus -Durl=https://${NEXUS_HOSTNAME}/content/repositories/$REPO -Dpackaging=rpm -Dfile=$(ls -d RPMS/x86_64/*)
  rules:
    - if: '$BumpTag == null '
    - exists:
        - build/RPMS/x86_64/*.rpm
  tags:
    - cdcm
  dependencies:
    - build_rpms
