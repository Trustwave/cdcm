variables:
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_COMMIT_TAG

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - deps/

stages:
  - build_deps
  - build
  - test
  - coverage
  - build_rpms
  - test_install
  #  - pages_deploy
  - deploy

before_script:
  - export REPORT_FNAME=results.$(date +%d-%m-%Y-%H_%M_%S).xml
  - echo $CI_PROJECT_DIR
  - export CMAKE_FLAGS='-DBUILD_DEV=OFF'
  - if [ -z $CI_COMMIT_TAG ]; then export CMAKE_FLAGS='-DBUILD_DEV=ON' ; fi;
  - echo $CMAKE_FLAGS

after_script:
  - echo "After script section"

build_deps:
  stage: build_deps
  script:
    - cd build
    - scl enable devtoolset-8 'make deps'
  rules:
    - if: '$PeriodicTag==null'
      changes:
        - build/Makefile
        - tars/*
        - .gitlab-ci.yml
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - deps/
    policy: pull-push
  tags:
    - cdcm

build:
  stage: build
  variables:
    DEPS_DIR: $CI_PROJECT_DIR/deps
  script:
    - scl enable devtoolset-8 bash
    - mkdir -p build_cdcm
    - cd build_cdcm
    - scl enable devtoolset-8 "cmake3 $CMAKE_FLAGS .."
    - scl enable devtoolset-8 "make -j4"
    - rm -fr /opt/output/libs/*
    - rm -fr /opt/output/bin/*
    - scl enable devtoolset-8 "make install"
  rules:
    - if: '$PeriodicTag==null'
      changes:
        - src/**/*
        - .gitlab-ci.yml
  artifacts:
    paths:
      - build_cdcm/
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - deps/
    policy: pull
  tags:
    - cdcm
  dependencies:
    - build_deps

test:
  stage: test
  allow_failure: true
  script:
    - cd build_cdcm/
    - scl enable devtoolset-8 "make install"
    - cd src/tests/
    - pkill -9 cdcm
    - LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/output/${CI_COMMIT_BRANCH}/libs nohup cdcm_broker
    - ./tests_run  --log_sink=$REPORT_FNAME  --log_format=JUNIT  --log_level=all
    - pkill -9 cdcm
    - cd ../..
    - make uninstall
  rules:
    - if: '$PeriodicTag==null'
      changes:
        - src/**/*
        - .gitlab-ci.yml
  artifacts:
    when: always
    paths:
      - build_cdcm/src/tests/*.xml
    reports:
      junit: build_cdcm/src/tests/*.xml
  tags:
    - cdcm

html_coverage:
  stage: coverage
  script:
    - cd build_cdcm
    - make html_coverage
  artifacts:
    name: pages
    when: always
    paths:
      - build_cdcm/src/html_coverage
    expire_in: 10 days
  rules:
    - if: $CI_COMMIT_BRANCH=="master"
      changes:
        - src/**/*
        - .gitlab-ci.yml
  tags:
    - cdcm
  dependencies:
    - build

#
#pages:
#  stage: pages_deploy
#  dependencies:
#    - html_coverage
#  script:
#    - mkdir -p public
#    - rm -rf public/*
#    - cp -r build_cdcm/src/html_coverage/* public/
#  artifacts:
#    name: pages
#    paths:
#      - public/
#    expire_in: 15 days
#  only:
#    refs:
#      - branches
#  tags:
#    - cdcm

build_rpms:
  stage: build_rpms
  script:
    - cd build
    - export VERSION=$(cat version.txt | cut -d'-' -f 1 )
    - export RELEASE=$(cat version.txt | cut -d'-' -f 2 )
    - rpmbuild  --define "pkg_version $VERSION"  --define "release $RELEASE" -bb cdcm.spec
  rules:
    - if: '$PeriodicTag==null'
      changes:
        - cdcm_settings.json
        - src/**/*
        - build/cdcm.spec
        - build/tw-cdcm.service
        - .gitlab-ci.yml
        - build/nexus_deploy.py
  artifacts:
    paths:
      - build/RPMS/x86_64/
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - deps/
    policy: pull
  tags:
    - cdcm

test_install:
  stage: test_install
  tags:
    - cdcm_install
  script:
    - cd build
    - sudo yum localinstall -y RPMS/x86_64/*.rpm
    - sleep 5
    - sudo systemctl start tw-cdcm
    - sleep 5
    - sudo systemctl status tw-cdcm
    - sleep 5
    - sudo systemctl stop tw-cdcm
    - sleep 5
    - sudo yum -y erase tw-cdcm
  rules:
    - if: '$PeriodicTag==null && $CI_COMMIT_BRANCH=="master"'
      changes:
        - cdcm_settings.json
        - src/**/*
        - build/cdcm.spec
        - build/tw-cdcm.service
        - .gitlab-ci.yml
  dependencies:
    - build_rpms
  allow_failure: true

push_tag:
  stage: deploy
  script:
    - cd build
    - bump2version $BumpTag --verbose --config-file ./bumpversion.cfg
  rules:
    - if: '$PeriodicTag!=null && $BumpTag != null'
  tags:
    - cdcm

deploy_release:
  stage: deploy
  script:
    - cd build
    - export VERSION=$(cat version.txt | cut -d'-' -f 1 )
    - python nexus_deploy.py -a cdcm -v $VERSION -r release RPMS/x86_64/*.rpm
  rules:
    - if: '$PeriodicTag==null && $CI_COMMIT_TAG!=null'
    - exists:
        - build/RPMS/x86_64/*.rpm
  tags:
    - cdcm
  dependencies:
    - build_rpms

deploy_snapshot:
  stage: deploy
  script:
    - cd build
    - export VERSION=$(cat version.txt | cut -d'-' -f 1 )
    - python nexus_deploy.py -a cdcm -b $CI_COMMIT_BRANCH -v $VERSION RPMS/x86_64/*.rpm
  rules:
    - if: '$PeriodicTag==null && $CI_COMMIT_TAG==null'
    - exists:
        - build/RPMS/x86_64/*.rpm
  tags:
    - cdcm
  dependencies:
    - build_rpms
