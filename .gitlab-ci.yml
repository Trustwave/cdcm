variables:
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_COMMIT_REF_SLUG
  GIT_SUBMODULE_STRATEGY: recursive

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - deps/

stages:
  - build_deps
  - build
  - unittests
  - coverage
  - build_rpms
  - test_install
  #  - pages_deploy
  - deploy
  - service_update
  - functional_tests
  - smoke_test

before_script:
  - export REPORT_FNAME=results.$(date +%d-%m-%Y-%H_%M_%S)
  - echo $CI_PROJECT_DIR
  - export CMAKE_FLAGS='-DBUILD_DEV=OFF'
  - if [ -z $CI_COMMIT_TAG ]; then export CMAKE_FLAGS='-DBUILD_DEV=ON' ; fi;
  - env

after_script:
  - echo "After script section"

build_deps:
  stage: build_deps
  script:
    - cd build
    - scl enable devtoolset-8 'make deps'
  rules:
    - if: '$BumpTag == null || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      changes:
        - build/Makefile
        - build/version.txt
        - tars/*
        - .gitlab-ci.yml
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - deps/
    policy: pull-push
  tags:
    - cdcm

build:
  stage: build
  variables:
    DEPS_DIR: $CI_PROJECT_DIR/deps
  script:
    - scl enable devtoolset-8 bash
    - mkdir -p build_cdcm
    - cd build_cdcm
    - scl enable devtoolset-8 "cmake3 $CMAKE_FLAGS .."
    - scl enable devtoolset-8 "make -j4"
    - rm -fr /opt/output/$CI_COMMIT_REF_SLUG/libs/*
    - rm -fr /opt/output/$CI_COMMIT_REF_SLUG/bin/*
    - scl enable devtoolset-8 "make install"
  rules:
    - if: '$BumpTag == null || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      changes:
        - build/version.txt
        - src/**/*
        - tars/**/*
        - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'

  artifacts:
    paths:
      - build_cdcm/
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - deps/
    policy: pull
  tags:
    - cdcm
  dependencies:
    - build_deps

unittests:
  stage: unittests
  allow_failure: true
  script:
    - cd build_cdcm/
    - scl enable devtoolset-8 "make install"
    - cd ../cdcm_testing/tests
    - sed -i "s@/var/log/cdcm/testsRunner/@"$PWD"/log/@g" ../functional_tests/testsRunner_settings.json
    - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/output/libs/:/opt/output/libs/plugins/:$GIT_CLONE_PATH/deps/samba-4.10.6/bin/shared/private/:$GIT_CLONE_PATH/deps/samba-4.10.6/bin/shared
    - cd ../../build_cdcm/src/cdcm_testing
    - ./tests_run  --log_sink=$REPORT_FNAME.xml  --log_format=JUNIT  --log_level=all || code=$?; if [ $code -eq 0 ]; then echo "success"; else echo 'tests failure'; fi
    - java -jar /opt/xunit-to-html/saxon9he.jar -o:$REPORT_FNAME.html -s:$REPORT_FNAME.xml -xsl:/opt/xunit-to-html/xunit_to_html.xsl
    - sshpass -f /root/pf  scp -P 2222  $REPORT_FNAME.html root@10.88.240.20://opt/tests_results
  rules:
    - if: ' $RunFast==null && $BumpTag == null'
      changes:
        - build/version.txt
        - src/**/*
        - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
  artifacts:
    when: always
    paths:
      - build_cdcm/src/cdcm_testing/*.xml
      - build_cdcm/src/cdcm_testing/*.html
      - build_cdcm/src/cdcm_testing/log/cdcm_client.log
    reports:
      junit: build_cdcm/src/tests/*.xml
  tags:
    - cdcm

html_coverage:
  stage: coverage
  script:
    - cd build_cdcm
    - scl enable devtoolset-8 "make html_coverage"
  artifacts:
    name: pages
    when: always
    paths:
      - build_cdcm/src/html_coverage
    expire_in: 10 days
  rules:
    - if: '$RunFast==null &&  $CI_COMMIT_BRANCH=="master" && $BumpTag == null && $CI_COMMIT_TAG!=null'
      changes:
        - src/**/*
        - .gitlab-ci.yml
    - if: '$RunFast==null &&  $CI_COMMIT_BRANCH=="develop" && $BumpTag == null && $CI_COMMIT_TAG!=null'
      changes:
        - src/**/*
        - .gitlab-ci.yml
  tags:
    - cdcm
  dependencies:
    - build

#
#pages:
#  stage: pages_deploy
#  dependencies:
#    - html_coverage
#  script:
#    - mkdir -p public
#    - rm -rf public/*
#    - cp -r build_cdcm/src/html_coverage/* public/
#  artifacts:
#    name: pages
#    paths:
#      - public/
#    expire_in: 15 days
#  only:
#    refs:
#      - branches
#  tags:
#    - cdcm

build_rpms:
  stage: build_rpms
  script:
    - cd build
    - if [[ $(cat version.txt) =~ ([0-9]+\.[0-9]+\.[0-9]+)\.([0-9]+)_([A-Z]+) ]] ; then VERSION=${BASH_REMATCH[1]};SNAPSHOT=${BASH_REMATCH[2]};RELEASE=${BASH_REMATCH[3]}; fi
    - if [ "$CI_COMMIT_BRANCH" = "master" ]; then  export BRANCH=''; else export BRANCH=_${CI_COMMIT_BRANCH//\//_}  ;fi
    - if [ "$CI_COMMIT_BRANCH" = "develop" ]; then  export BRANCH=''; else export BRANCH=_${CI_COMMIT_BRANCH//\//_}  ;fi
    - if [ "$CI_PIPELINE_SOURCE" = "merge_request_event" ]; then  export BRANCH=_MR_${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME//\//_}  ;fi
    - if [ "$RELEASE" = "SNAPSHOT" ];then export VERSION=${VERSION}${BRANCH}; export RELEASE_DEF="SNAPSHOT_$SNAPSHOT" ;else export RELEASE_DEF="$SNAPSHOT";fi
    - echo rpmbuild --define "pkg_version ${VERSION}" --define "release ${RELEASE_DEF}"  -bb cdcm.spec
    - rpmbuild --define "pkg_version ${VERSION}" --define "release ${RELEASE_DEF}"  -bb cdcm.spec
  rules:
    - if: '$BumpTag == null || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      changes:
        - cdcm_settings.json
        - src/**/*
        - build/cdcm.spec
        - build/version.txt
        - build/cdcm.service
        - build/50-cdcm.preset
        - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'

  artifacts:
    paths:
      - build/RPMS/x86_64/
  cache:
    key: "$CI_COMMIT_REF_SLUG"
    paths:
      - deps/
    policy: pull
  tags:
    - cdcm

test_install:
  stage: test_install
  tags:
    - cdcm_install
  script:
    - cd build
    - sudo yum install -y RPMS/x86_64/*.rpm
    - sudo systemctl status cdcm
    - sudo yum -y erase cdcm
  rules:
    - if: '$RunFast==null && $BumpTag == null && $CI_COMMIT_BRANCH == "master"'
      changes:
        - build/version.txt
        - cdcm_settings.json
        - src/**/*
        - build/cdcm.spec
        - build/cdcm.service
        - .gitlab-ci.yml
    - if: '$RunFast==null && $BumpTag == null && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      changes:
        - cdcm_settings.json
        - src/**/*
        - build/cdcm.spec
        - build/cdcm.service
        - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
    - exists:
        - build/RPMS/x86_64/*.rpm
  dependencies:
    - build_rpms
  allow_failure: true

push_tag:
  stage: deploy
  script:
    - cd build
    - git remote set-url origin https://git_push_tag:${secret}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git
    - git config --global push.default simple
    - bump2version $BumpTag --verbose --config-file ./bumpversion.cfg
    - git status
    - git push origin --tags
  rules:
    - if: ' $BumpTag != null'
  tags:
    - cdcm

deploy:
  stage: deploy
  script:
    - cd build
    - if [[ $(cat version.txt) =~ ([0-9]+\.[0-9]+\.[0-9]+)\.([0-9]+)_([A-Z]+) ]] ; then VERSION=${BASH_REMATCH[1]};SNAPSHOT=${BASH_REMATCH[2]};RELEASE=${BASH_REMATCH[3]}; fi
    - export REPO=releases
    - if [ "$CI_COMMIT_BRANCH" = "master" ]; then  export BRANCH=''; else export BRANCH=${CI_COMMIT_BRANCH//\//_}_ ; export REPO=snapshots ;fi
    - if [ "$CI_COMMIT_BRANCH" = "develop" ]; then  export BRANCH=''; else export BRANCH=${CI_COMMIT_BRANCH//\//_}_ ; export REPO=snapshots ;fi
    - if [ "$RELEASE" = "SNAPSHOT" ]; then export REPO=snapshots ;fi
    - if [ "$REPO" = "snapshots" ];then export VERSION=$BRANCH$VERSION.$SNAPSHOT-SNAPSHOT ; else export VERSION=$VERSION.$SNAPSHOT ;fi
    - echo mvn deploy:deploy-file -s /etc/maven/settings.xml  -DgroupId=com.trustwave -DartifactId=cdcm -Dversion=$VERSION -DgeneratePom=true -DrepositoryId=nexus -Durl=https://${NEXUS_HOSTNAME}/content/repositories/$REPO -Dpackaging=rpm -Dfile=$(ls -d RPMS/x86_64/*)
    - mvn deploy:deploy-file -s /etc/maven/settings.xml  -DgroupId=com.trustwave -DartifactId=cdcm -Dversion=$VERSION -DgeneratePom=true -DrepositoryId=nexus -Durl=https://${NEXUS_HOSTNAME}/content/repositories/$REPO -Dpackaging=rpm -Dfile=$(ls -d RPMS/x86_64/*)
  rules:
    - if: '$BumpTag == null '
    - exists:
        - build/RPMS/x86_64/*.rpm
  tags:
    - cdcm
  dependencies:
    - build_rpms

service_update:
  stage: service_update
  script:
    - cd build
    - if [[ $(cat version.txt) =~ ([0-9]+\.[0-9]+\.[0-9]+)\.([0-9]+)_([A-Z]+) ]] ; then VERSION=${BASH_REMATCH[1]};SNAPSHOT=${BASH_REMATCH[2]};RELEASE=${BASH_REMATCH[3]}; fi
    - if [ "$RELEASE" = "RELEASE" ] ; then curl -L "https://${NEXUS_HOSTNAME}/service/local/artifact/maven/redirect?r=releases&g=com.trustwave&a=cdcm&v=LATEST&p=rpm" -o cdcm.rpm ; if [ $(rpm -qa | grep cdcm) = $(rpm -qp cdcm.rpm) ]; then export INST_ACTION='reinstall'; else export INST_ACTION='install' ; fi ;sudo yum $INST_ACTION -y cdcm.rpm ;sed -i 's/127.0.0.1:7613/0.0.0.0:7613/gm' /etc/cdcm/cdcm_settings.json; systemctl restart cdcm; fi
  rules:
    - if: '$RunFast == null && $BumpTag == null && $CI_COMMIT_BRANCH == "master"'
  tags:
    - cdcm_service
  dependencies:
    - deploy

functional_tests:
  stage: functional_tests
  allow_failure: true
  script:
    - if [[ $(cat build/version.txt) =~ ([0-9]+\.[0-9]+\.[0-9]+)\.([0-9]+)_([A-Z]+) ]] ; then VERSION=${BASH_REMATCH[1]};SNAPSHOT=${BASH_REMATCH[2]};RELEASE=${BASH_REMATCH[3]}; fi
    - export REPO=releases
    - if [ "$CI_COMMIT_BRANCH" = "master" ]; then  export BRANCH=''; else export BRANCH=${CI_COMMIT_BRANCH//\//_}_ ; export REPO=snapshots ;fi
    - if [ "$CI_COMMIT_BRANCH" = "develop" ]; then  export BRANCH=''; else export BRANCH=${CI_COMMIT_BRANCH//\//_}_ ; export REPO=snapshots ;fi
    - if [ "$RELEASE" = "SNAPSHOT" ]; then export REPO=snapshots ;fi
    - if [ "$REPO" = "snapshots" ];then export VERSION=$BRANCH$VERSION.$SNAPSHOT-SNAPSHOT ; else export VERSION=$VERSION.$SNAPSHOT ;fi
    - curl -v -L "https://${NEXUS_HOSTNAME}/service/local/artifact/maven/redirect?r=$REPO&g=com.trustwave&a=cdcm&v=$VERSION&p=rpm" -o cdcm.rpm
    - sudo yum erase -y cdcm
    - sudo yum install -y cdcm.rpm
    - cd cdcm_testing/functional_tests
    - sed -i "s@/var/log/cdcm/testsRunner/@"$PWD"/log/@g" testsRunner_settings.json
    - source /etc/profile.d/rvm.sh
    - rvm reload
    - export testFiles=(full.xml qa_4_permissions.xml error_code_tests.xml qa_5_wmi_registry.xml)
    - for i in ${testFiles[@]};do ruby mdclient2.rb $i 2>&1 | tee $REPORT_FNAME.functional.$i.log ; mv log/cdcm_client1.log log/cdcm_client.$i.log ;done
    - for i in ${testFiles[@]};do sshpass -f /root/pf  scp -P 2222 $REPORT_FNAME.functional.$i.log root@10.88.240.20://opt/tests_results ;done
    - for i in ${testFiles[@]};do sshpass -f /root/pf  scp -P 2222  log/cdcm_client.$i.log root@10.88.240.20://opt/tests_results ;done
    - export FAILED=0
    - for i in ${testFiles[@]};do if [ $(cat $REPORT_FNAME.functional.$i.log  | grep 'failed \[0'  | wc -l) = "1" ]; then echo success; else ((FAILED++)) ; echo failed; fi ;done
    - if [[ "$FAILED" -gt 0 ]]; then exit 1 ;fi

  rules:
    - if: ' $RunFast==null && $BumpTag == null'
      changes:
        - build/version.txt
        - src/**/*
        - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
  artifacts:
    when: always
    paths:
      - cdcm_testing/functional_tests/*.log
      - cdcm_testing/functional_tests/log/*.log
  tags:
    - cdcm_tests

smoke_test:
  stage: smoke_test
  allow_failure: true
  script:
    - sudo yum update -y --nogpgcheck
    - if [[ $(cat build/version.txt) =~ ([0-9]+\.[0-9]+\.[0-9]+)\.([0-9]+)_([A-Z]+) ]] ; then VERSION=${BASH_REMATCH[1]};SNAPSHOT=${BASH_REMATCH[2]};RELEASE=${BASH_REMATCH[3]}; fi
    - export REPO=releases
    - if [ "$CI_COMMIT_BRANCH" = "master" ]; then  export BRANCH=''; else export BRANCH=${CI_COMMIT_BRANCH//\//_}_ ; export REPO=snapshots ;fi
    - if [ "$CI_COMMIT_BRANCH" = "develop" ]; then  export BRANCH=''; else export BRANCH=${CI_COMMIT_BRANCH//\//_}_ ; export REPO=snapshots ;fi
    - if [ "$RELEASE" = "SNAPSHOT" ]; then export REPO=snapshots ;fi
    - if [ "$REPO" = "snapshots" ];then export VERSION=$BRANCH$VERSION.$SNAPSHOT-SNAPSHOT ; else export VERSION=$VERSION.$SNAPSHOT ;fi
    - curl -v -L "https://${NEXUS_HOSTNAME}/service/local/artifact/maven/redirect?r=$REPO&g=com.trustwave&a=cdcm&v=$VERSION&p=rpm" -o cdcm.rpm
    - sudo yum erase -y cdcm
    - sudo yum install -y cdcm.rpm
    - export PATH=/opt/carrier/bin:$PATH
    - echo $PATH
    - export FAILED=0
    - IFS="," SMOKE_TEST_SERVERS_ARRAY=(${SMOKE_TEST_SERVERS}); for i in "${SMOKE_TEST_SERVERS_ARRAY[@]}";do  sudo PATH=/opt/carrier/bin:$PATH /opt/carrier/bin/carrier -t full -p 445 -x /root/input_file_$i.xml --asset-meta-path output_meta.xml  2>&1 | tee $REPORT_FNAME.$i.smoke.log ;done
    - IFS="," SMOKE_TEST_SERVERS_ARRAY=(${SMOKE_TEST_SERVERS}); for i in "${SMOKE_TEST_SERVERS_ARRAY[@]}";do  sshpass -f /root/pf  scp -P 2222  $REPORT_FNAME.$i.smoke.log root@10.88.240.20://opt/tests_results ;done
    - IFS="," SMOKE_TEST_SERVERS_ARRAY=(${SMOKE_TEST_SERVERS}); for i in "${SMOKE_TEST_SERVERS_ARRAY[@]}";do  if  grep -q AUTHENTICATION_SUCCESS_EVENT $REPORT_FNAME.$i.smoke.log; then echo success;else ((FAILED++)) ; echo failed; fi ;done
    - IFS="," SMOKE_TEST_SERVERS_ARRAY=(${SMOKE_TEST_SERVERS}); for i in "${SMOKE_TEST_SERVERS_ARRAY[@]}";do  if [ $(cat $REPORT_FNAME.$i.smoke.log  | grep ERROR  | wc -l) = "0" ]; then echo success;else ((FAILED++)) ; echo failed; fi ;done
    - if [[ "$FAILED" -gt 0 ]]; then exit 1 ;fi
  rules:
    - if: ' $RunFast==null && $BumpTag == null'
      changes:
        - build/version.txt
        - src/**/*
        - .gitlab-ci.yml
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
  artifacts:
    when: always
    paths:
      - ./*.log
  tags:
    - cdcm_smoke
